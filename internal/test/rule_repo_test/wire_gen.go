// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package rulerepotest

import (
	"go_mock_server/internal/infra/config"
	"go_mock_server/internal/infra/repo"
	"go_mock_server/internal/infra/storage"
)

// Injectors from wire.go:

func InitializeRepoTest() (*RepoRuleTestSuite, error) {
	ruleConfig, err := configs.LoadRuleConfig()
	if err != nil {
		return nil, err
	}
	db := storage.NewMySQLClient(ruleConfig)
	mySQLRuleStorageIface := storage.NewMysqlRuleStorage(db)
	client := storage.NewRedisClient(ruleConfig)
	redisRuleCacheIface := storage.NewredisRuleStorageImpl(client)
	ruleRepoConfig := repo.NewRuleRepoConfig(ruleConfig)
	ruleRepositoryIface := repo.NewRuleRepoImpl(mySQLRuleStorageIface, redisRuleCacheIface, client, ruleRepoConfig)
	repoRuleTestSuite := NewRepoRuleTestSuite(ruleRepositoryIface)
	return repoRuleTestSuite, nil
}

// wire.go:

type RepoRuleTestSuite struct {
	Repo repo.RuleRepositoryIface
}

func NewRepoRuleTestSuite(r repo.RuleRepositoryIface) *RepoRuleTestSuite {
	return &RepoRuleTestSuite{Repo: r}
}
