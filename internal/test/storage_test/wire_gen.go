// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package storagetest

import (
	"go_mock_server/internal/infra/config"
	"go_mock_server/internal/infra/storage"
)

// Injectors from wire.go:

func InitializeStorageTest() (*RuleStorageTestSuite, error) {
	ruleConfig, err := configs.LoadRuleConfig()
	if err != nil {
		return nil, err
	}
	db := storage.NewMySQLClient(ruleConfig)
	mySQLRuleStorageIface := storage.NewMysqlRuleStorage(db)
	client := storage.NewRedisClient(ruleConfig)
	redisRuleCacheIface := storage.NewredisRuleStorageImpl(client)
	ruleStorageTestSuite := NewRuleStorageTestSuite(mySQLRuleStorageIface, redisRuleCacheIface)
	return ruleStorageTestSuite, nil
}

// wire.go:

type RuleStorageTestSuite struct {
	storage      storage.MySQLRuleStorageIface
	redisStorage storage.RedisRuleCacheIface
}

func NewRuleStorageTestSuite(st storage.MySQLRuleStorageIface, rd storage.RedisRuleCacheIface) *RuleStorageTestSuite {
	return &RuleStorageTestSuite{storage: st, redisStorage: rd}
}
